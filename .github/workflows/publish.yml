name: Publish

on:
  push:
    tags: ["v*.*.*"]

  workflow_dispatch:
    inputs:
      release_tag_name:
        description: The tag where to put the asset
        required: true
        type: text

env:
  BUILD_TYPE: Release
  CC: gcc-12
  CXX: g++-12

jobs:
  build-ubuntu:
    runs-on: ubuntu-22.04 #self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: install all if not self-hosted
      if: ${{ !contains(github.repository, 'self-hosted') }}
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-12 g++-12 cmake pkg-config gtkmm-3.0

    - name: Cache build
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/build
        key: ${{ matrix.CXXcompiler }}-build
        restore-keys: ${{ matrix.CXXcompiler }}-build

    - name: Configure CMake
      run: cmake -S ${{github.workspace}} -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j `nproc`

    - name: Create temp folder
      run: |
        mkdir ${{github.workspace}}/temp
        cp ${{github.workspace}}/build/CubicServer ${{github.workspace}}/temp

    - name: Upload artifact in case of tag
      if: github.event_name != 'workflow_dispatch'
      uses: actions/upload-artifact@v3
      with:
        name: CubicServer_${{ github.ref_name }}
        path: ${{github.workspace}}/temp/CubicServer

    - name: Upload assets to release in case of tag
      if: github.event_name != 'workflow_dispatch'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{github.workspace}}/temp/CubicServer
        tag: ${{ github.ref }}
        asset_name: CubicServer_${{ inputs.release_tag_name }}
        overwrite: true

    - name: Upload artifact in case of workflow_dispatch
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v3
      with:
        name: CubicServer_${{ inputs.release_tag_name }}
        path: ${{github.workspace}}/temp/CubicServer

    - name: Upload assets to release in case of workflow_dispatch
      if: github.event_name == 'workflow_dispatch'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{github.workspace}}/temp/CubicServer
        tag: ${{ inputs.release_tag_name }}
        asset_name: CubicServer_${{ inputs.release_tag_name }}
        overwrite: true
# build-windows:
#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v3

#     - name: Add MSBuild to PATH
#       uses: microsoft/setup-msbuild@v1.0.2

#     - name: Restore NuGet packages
#       working-directory: ${{env.GITHUB_WORKSPACE}}
#       run: nuget restore ${{env.SOLUTION_FILE_PATH}}

#     - name: Build
#       working-directory: ${{env.GITHUB_WORKSPACE}}
#       Add additional options to the MSBuild command line here (like platform or verbosity level).
#       See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
#       run: msbuild /m /p:Configuration=${{env.BUILD_TYPE}} ${{env.SOLUTION_FILE_PATH}}

#     - name: Path to executable
#       run: ls -l ${{env.GITHUB_WORKSPACE}}/build

#   build-macos:
#     runs-on: macos-latest

#     steps:
#     - uses: actions/checkout@v3

#     - name: Install dependencies
#       run: |
#         brew install cmake
#         brew install gcc@12
#         brew install g++@12
#       env:
#         CC: /usr/local/bin/gcc-12
#         CXX: /usr/local/bin/g++-12

#     - name: Configure CMake
#       run: cmake -S ${{github.workspace}} -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

#     - name: Build
#       run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j4

#     - name: Path to executable
#       run: ls -l ${{github.workspace}}/build
